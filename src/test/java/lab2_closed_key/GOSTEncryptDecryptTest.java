package lab2_closed_key;

import lab2_closed_key.utils.InitProperties;
import org.assertj.core.api.Assertions;
import org.testng.annotations.Test;

import javax.xml.bind.DatatypeConverter;
import java.nio.charset.StandardCharsets;

public class GOSTEncryptDecryptTest {

    private final String originalText = InitProperties.ORIGINAL_TEXT;

    private final String keyText = InitProperties.KEY;

    private String cipheredText;

    byte[][] block2 = {
            {0x9, 0x6, 0x3, 0x2, 0x8, 0xB, 0x1, 0x7, 0xA, 0x4, 0xE, 0xF, 0xC, 0x0, 0xD, 0x5},
            {0x3, 0x7, 0xE, 0x9, 0x8, 0xA, 0xF, 0x0, 0x5, 0x2, 0x6, 0xC, 0xB, 0x4, 0xD, 0x1},
            {0xE, 0x4, 0x6, 0x2, 0xB, 0x3, 0xD, 0x8, 0xC, 0xF, 0x5, 0xA, 0x0, 0x7, 0x1, 0x9},
            {0xE, 0x7, 0xA, 0xC, 0xD, 0x1, 0x3, 0x9, 0x0, 0x2, 0xB, 0x4, 0xF, 0x8, 0x5, 0x6},
            {0xB, 0x5, 0x1, 0x9, 0x8, 0xD, 0xF, 0x0, 0xE, 0x4, 0x2, 0x3, 0xC, 0x7, 0xA, 0x6},
            {0x3, 0xA, 0xD, 0xC, 0x1, 0x2, 0x0, 0xB, 0x7, 0x5, 0x9, 0x4, 0x8, 0xF, 0xE, 0x6},
            {0x1, 0xD, 0x2, 0x9, 0x7, 0xA, 0x6, 0x0, 0x8, 0xC, 0x4, 0x5, 0xF, 0x3, 0xB, 0xE},
            {0xB, 0xA, 0xF, 0x5, 0x0, 0xC, 0xE, 0x8, 0x6, 0x2, 0x3, 0x9, 0x1, 0x7, 0xD, 0x4}
    };

    @Test
    public void testEncrypt() {
        CypherGOST encryptor = new CypherGOST();
        CypherOFB cypherOFB = new CypherOFB(encryptor);
        System.out.println("\nGiven:\n" + originalText);

        byte[] encrypted = cypherOFB.encrypt(originalText, keyText);
        System.out.println("\nEncrypted:\n" + new String(encrypted));
        Assertions.assertThat(new String(encrypted)).isNotEqualTo(originalText);

        String decrypted = cypherOFB.decrypt(encrypted, keyText).trim();
        System.out.println("\nDecrypted:\n" + decrypted);
        Assertions.assertThat(decrypted).isEqualTo(originalText);
    }

}
